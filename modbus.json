{
  "name": "modbus",
  "description": "MODBUS Master ",
  "module": "modbus.js",
  "single": 0,
  "restartOnChannelsChange": 1,

  "params": [
    {
      "name": "transport",
      "note": "Транспорт",
      "type": "droplist",
      "data": [
        {
          "id": "tcp",
          "name": "Modbus TCP"
        }
      ],
      "val": "tcp"
    },

    {
      "name": "host",
      "note": "IP",
      "type": "string",
      "val": "192.168.0.250",
      "visible": "data.transport && data.transport.substr(0,3) == \"tcp\""
    },

    {
      "name": "port",
      "note": "Порт",
      "type": "number",
      "val": "502",
      "visible": "data.transport && data.transport.substr(0,3) == \"tcp\""
    },

    {
      "name": "serialport",
      "note": "Порт",
      "type": "STRING",
      "val": "COM1",
      "visible": "data.transport && data.transport.substr(0,3) == \"ser\""
    },

    {
      "name": "timeout",
      "note": "Ожидание ответа на запрос (ms)",
      "val": 1000,
      "type": "number"
    },

    {
      "name": "polldelay",
      "note": "Интервал между запросами (ms)",
      "val": 200,
      "type": "number"
    },
    
    {
        "name": "maxreadlen",
        "note": "Max кол-во слов при чтении диапазона",
        "val": 250,
        "type": "number"
    },

    {
      "name": "hex",
      "note": "Вид представления адреса",
      "type": "droplist",
      "data": [
        {
          "id": 0,
          "name": "Dec - Десятичный"
        },
        {
          "id": 1,
          "name": "Hex - Шестнадцатиричный"
        }
      ],
      "val": 0
    },

    {
        "name": "bo16",
        "note": "Порядок байтов для 2-байтовых значений",
        "type": "droplist",
        "data": [
          {
            "id": "be",
            "name": "Big-Endian В1B2 => B1B2"
          },
          {
            "id": "le",
            "name": "Little-Endian В1B2 => B2B1"
          }
        ],
        "val": "be"
      },
      {
        "name": "bo32",
        "note": "Порядок байтов для 4-байтовых значений",
        "type": "droplist",
        "data": [
          {
            "id": "be",
            "name": "Big-Endian B1B2B3B4 => B1B2B3B4"
          },
          {
            "id": "sw",
            "name": "Big-Endian swap B1B2B3B4 => B3B4B1B2"
          },
          {
            "id": "le",
            "name": "Little-Endian B1B2B3B4 => B4B3B2B1"
          },
          {
            "id": "sb",
            "name": "Little-Endian swap B1B2B3B4 => B2B1B4B3"
          }
        ],
        "val": "sw"
      }
  ],

  "chpattern": [
    {
      "name": "desc",
      "note": "Тип регистра",
      "type": "droplist",
      "data": [
        { "id": "DI", "name": "DI - Discrete Input" },
        { "id": "DO", "name": "DO - Discrete Output Coil" },
        { "id": "AI", "name": "AI - Input Register" },
        { "id": "AO", "name": "AO - Holding Register" }
      ],
      "order":1
    },

    {
      "name": "unitid",
      "note": "Unit ID (адрес устройства)",
      "type": "number",
      "order":2,
      "val": 1
    },

    {
      "name": "address",
      "note": "Адрес регистра",
      "type": "STRING",
      "order":10,
      "val": 0
    },

    {
      "name": "vartype",
      "note": "Тип переменной",
      "type": "droplist",
      "data": [
        {
          "id": "bool",
          "name": "BOOL",
          "visible": "data.desc && data.desc.substr(0,1) == \"D\""
        },

        {
          "id": "uint8",
          "name": "BYTE 1 байт",
          "visible": "data.desc && data.desc.substr(0,1) == \"A\""
        },

        {
          "id": "int16",
          "name": "INT16 2 байта",
          "visible": "data.desc && data.desc.substr(0,1) == \"A\""
        },
      
        {
          "id": "uint16",
          "name": "UINT16 2 байта",
          "visible": "data.desc && data.desc.substr(0,1) == \"A\""
        },

        {
          "id": "int32",
          "name": "INT32 4 байта",
          "visible": "data.desc && data.desc.substr(0,1) == \"A\""
        },
      
        {
          "id": "uint32",
          "name": "UINT32 4 байта",
          "visible": "data.desc && data.desc.substr(0,1) == \"A\""
        },

        {
          "id": "float",
          "name": "FLOAT 4 байта",
          "visible": "data.desc && data.desc.substr(0,1) == \"A\""
        }
      ],
      "order":11,
      "val": "int16"
      
    },
    {
        "name": "fcr",
        "note": "Функция чтения",
        "type": "droplist",
        "data": [
            {
              "id": "1",
              "name": "FC1 - Read Coils",
              "visible": "data.desc && data.desc.substr(0,1) == \"D\""
            },
    
            {
                "id": "2",
                "name": "FC2 - Read Discrete Inputs",
                "visible": "data.desc && data.desc.substr(0,1) == \"D\""
            },
            {
                "id": "3",
                "name": "FC3 - Read Holding Registers",
                "visible": "data.desc && data.desc.substr(0,1) == \"A\""
            },
            {
                "id": "4",
                "name": "FC4 - Read Input Registers",
                "visible": "data.desc && data.desc.substr(0,1) == \"A\""
             }
        ],  
        "order":12,  
        "val": "3"
    },
    {
        "name": "gr",
        "note": "Группировать при чтении",
        "type": "cb",
        "order":13,  
        "val": true
    },
    {
        "name": "usek",
        "note": "Трансформация значения",
        "type": "cb",
        "order":14,  
        "visible": "data.desc==\"AI\" || data.desc==\"AO\""
    },
    {
        "name": "ks0",
        "note": "Min значение логического уровня ",
        "type": "number",
        "order":15,  
        "visible": "data.usek"
    },
    {
        "name": "ks",
        "note": "Max значение логического уровня",
        "type": "number",
        "order":16,  
        "visible": "data.usek"
    },
    {
        "name": "kh0",
        "note": "Min значение физического уровня",
        "type": "number",
        "order":17,  
        "visible": "data.usek"
    },
    {
        "name": "kh",
        "note": "Max значение физического уровня",
        "type": "number",
        "order":18,  
        "visible": "data.usek"
    },
    {
        "name": "useactions",
        "note": "Настроить команды",
        "type": "cb",
        "order":19,  
        "val": false
    },
    {
        "name": "actions",
        "tabnote": "Команды",
        "note": "$action",
        "type": "multi",
        "visible": "data.useactions && (data.desc == \"DO\" || data.desc == \"AO\")",
        "data": {
          "scheme": {
            "act": { "name": "$action", "type": "droplist", "order": 0, "data":[{"id":"on", "name":"on"}, {"id":"off", "name":"off"},{"id":"set", "name":"set"}] },
            "address":{
                "name": "Modbus address",
                "type": "STRING",
                "order": 1,
                "val": 0
              },
          
              "vartype":{
                "name": "Тип переменной",
                "type": "droplist",
                "order": 2,
                "data": [
                  {
                    "id": "bool",
                    "name": "BOOL"
                  },
          
                  {
                    "id": "uint8",
                    "name": "BYTE 1 байт"
                  },
          
                  {
                    "id": "int16",
                    "name": "INT16 2 байта"
                  },
                
                  {
                    "id": "uint16",
                    "name": "UINT16 2 байта"
                  },
          
                  {
                    "id": "int32",
                    "name": "INT32 4 байта"
                  },
                
                  {
                    "id": "uint32",
                    "name": "UINT32 4 байта"
                  },
          
                  {
                    "id": "float",
                    "name": "FLOAT 4 байта"
                  }]
            },
            "value":{
                "name": "Значение",
                "type": "STRING",
                "order": 3,
                "val": ""
            }
          },
          "default": {
            "act": "on",
            "address": 0,
            "vartype": "int16",
            "value": ""
          }
        }
      }
  ],

  "chdefault": {
    "chan": "ch1",
    "desc": "AO",
    "vartype": "int16",
    "address": 0,
    "unitid": 0,
    "pollp": true,
    "fcr": "3",
    "gr": true,
    "usek": false,
    "ks0": 0,
    "ks": 100,
    "kh0": 0,
    "kh": 100,
    "useactions": false,
    "actions":[ { "act": "on", "address": 0, "vartype": "bool", "value": ""}]

  },

  "genrules": {
    "DI": {
      "cl": "SensorD"
    },

    "AI": {
      "cl": "SensorA"
    },

    "DO": {
      "cl": "ActorD"
    },

    "AO": {
      "cl": "ActorA"
    }
  },

  "actions": [{}]
}
